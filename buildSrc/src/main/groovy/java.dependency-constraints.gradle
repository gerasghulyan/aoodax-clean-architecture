plugins {
    id 'java'
    id 'io.spring.dependency-management'
}

// spring boot version is defined in buildSrc/build.gradle file, spring version is inferred from that.

project.ext {
    aoodaxCommonsMongoDbVersion = '0.0.1'
    aoodaxCommonsUtilsVersion = '0.0.1'
    aoodaxCommonsTestLocalstackVersion = '0.0.1'
    aoodaxCommonsUnitTestVersion = '0.0.1'
    aoodaxCommonsTestToolkitVersion = '0.0.1'
    aoodaxCommonsQueueProducerVersion = '0.0.1'
    aoodaxCommonsQueueMessageVersion = '0.0.1'
    aoodaxCommonsRestDtoVersion = '0.0.1'
    springCloudVersion = '2022.0.0'
    messagingVersion = "2.2.6.RELEASE"
    lombokVersion = '1.18.24'
    springdocOpenapiVersion = '2.2.0'
    springSecurityOauth2Version = '2.5.2.RELEASE'
    resilience4jBulkheadVersion = '1.7.1'
    mockserverClientJavaVersion = '5.11.2'
    swaggerProjectVersion = '2.2.8'
    jetbrainsAnnotationsVersion = '17.0.0'
    commonsLang3Version = '3.12.0'
    jakartaAnnotationVersion = '2.1.1'
    findbugsJsr305Version = '3.0.2'
    archunitJunit5Version = '1.0.0'
    junitJupiterVersion = '5.9.0'
    mockitoJunitJupiterVersion = '4.8.0'
    mockitoKotlinVersion = '4.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)

    constraints {
        implementation "com.aoodax.jvm.common:utils:$aoodaxCommonsUtilsVersion"
        implementation "com.aoodax.jvm.common:persistence-mongo:$aoodaxCommonsUtilsVersion"
        implementation "com.aoodax.jvm.common:queue-producer:$aoodaxCommonsUtilsVersion"
        implementation "com.aoodax.jvm.common:queue-message:$aoodaxCommonsUtilsVersion"
        implementation "com.aoodax.jvm.common:test-toolkit:$aoodaxCommonsUtilsVersion"
        implementation "com.aoodax.jvm.common:rest-dto:$aoodaxCommonsRestDtoVersion"

        implementation "jakarta.annotation:jakarta.annotation-api:$jakartaAnnotationVersion"
        implementation "com.google.code.findbugs:jsr305:$findbugsJsr305Version"
        implementation "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"
        implementation "io.github.resilience4j:resilience4j-bulkhead:$resilience4jBulkheadVersion"
        implementation "org.apache.commons:commons-lang3:$commonsLang3Version"
        implementation "io.swagger.core.v3:swagger-annotations-jakarta:$swaggerProjectVersion"
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiVersion"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation "com.aoodax.jvm.common:integration-test-localstack:$aoodaxCommonsTestLocalstackVersion"
        testImplementation "com.aoodax.jvm.common:unit-test:$aoodaxCommonsUnitTestVersion"
        testImplementation "com.aoodax.jvm.common:test-toolkit:$aoodaxCommonsTestToolkitVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoJunitJupiterVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:$archunitJunit5Version"
        testRuntimeOnly "oFrg.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
        testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    }
}
